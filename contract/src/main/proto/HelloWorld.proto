//
// Protocol buffers definition for Hello World
//
syntax = "proto3";
package com.dpas;

// Request payload
message HelloRequest {
  // Each message attribute is strongly typed.
  // You also must assign a "tag" number.
  // Each tag number is unique within the message.
  string name = 1;

  // This defines a strongly typed list of String
  repeated string hobbies = 2;

  // There are many more basics types, like Enum, Map
  // See https://developers.google.com/protocol-buffers/docs/proto3
  // for more information.
}

message HelloResponse {
  string greeting = 1;
}

message RegisterRequest {
    string key = 1;
}

message RegisterResponse {
    bool result = 1;
}

message GetTokenRequest {
    string key = 1;
}

message GetTokenResponse {
    string token = 1;
}

message Announcement {
    string key = 1;
    string message = 2;
    int32 postId = 3;
    repeated Announcement a = 4;
    string token = 5;
}

message PostRequest {
    Announcement post = 1;
    bytes signature = 2;
    bytes hash = 3;
}

message PostResponse {
    bool result = 1;
}

message PostGeneralRequest {
    Announcement post = 1;
    bytes signature = 2;
    bytes hash = 3;
}

message PostGeneralResponse {
    bool result = 1;
}

message ReadRequest {
    string key = 1;
    int32 number = 2;
}

message ReadResponse {
    repeated Announcement result = 1;
    bytes signature = 2;
    bytes hash = 3;
}

message ReadGeneralRequest {
    int32 number = 1;
}

message ReadGeneralResponse {
    repeated Announcement result = 1;
    bytes signature = 2;
    bytes hash = 3;
}

// Defining a Service, a Service can have multiple RPC operations
service HelloWorldService {
  // Define a RPC operation
  rpc greeting(HelloRequest) returns (HelloResponse);
  rpc register(RegisterRequest) returns (RegisterResponse);
  rpc getToken(GetTokenRequest) returns (GetTokenResponse);
  rpc post(PostRequest) returns (PostResponse);
  rpc postGeneral(PostGeneralRequest) returns (PostGeneralResponse);
  rpc read(ReadRequest) returns (ReadResponse);
  rpc readGeneral(ReadGeneralRequest) returns (ReadGeneralResponse);
}
