//
// Protocol buffers definition for Hello World
//
syntax = "proto3";
package com.dpas;

message RegisterRequest {
    string key = 1;
    bytes signature = 2;
    repeated BroadcastResponse signatures = 3;
}

message RegisterResponse {
    string result = 1;
    bytes signature = 2;
}

message GetTokenRequest {
    string key = 1;
    bytes signature = 2;
    repeated BroadcastResponse signatures = 3;
}

message GetTokenResponse {
    string token = 1;
    bytes signature = 2;
}

message Announcement {
    string key = 1;
    string message = 2;
    int32 postId = 3;
    repeated int32 ref = 5;
    string token = 6;
    bytes signature = 7;
    int32 wts = 8;
}

message PostRequest {
    Announcement post = 1;
    bytes signature = 2;
    string token = 4;
    int32 wts = 5;
}

message PostResponse {
    string result = 1;
    bytes signature = 2;
}

message PostGeneralRequest {
    Announcement post = 1;
    bytes signature = 2;
    string token = 4;
    int32 wts = 5;
}

message PostGeneralResponse {
    string result = 1;
    bytes signature = 2;
}

message ReadRequest {
    string key = 1;
    string keyToRead = 2;
    int32 number = 3;
    bytes signature = 4;
    string token = 6;
}

message ReadResponse {
    repeated Announcement result = 1;
    bytes signature = 2;
    int32 ts = 4;
}

message ReadGeneralRequest {
    string key = 1;
    int32 number = 2;
    bytes signature = 3;
    string token = 5;
}

message ReadGeneralResponse {
    repeated Announcement result = 1;
    bytes signature = 2;
    int32 ts = 4;
}

message ResetRequest {
    repeated BroadcastResponse signatures = 1;
}

message ResetResponse {
}

message BroadcastRequest {
    int32 bcb = 1;
    string message = 2;
}

message BroadcastResponse {
    int32 bcb = 1;
    string message = 2;
    bytes signature = 3;
}

// Defining a Service, a Service can have multiple RPC operations
service DpasService {
    // Define a RPC operation
    rpc register (RegisterRequest) returns (RegisterResponse);
    rpc getToken (GetTokenRequest) returns (GetTokenResponse);
    rpc post (PostRequest) returns (PostResponse);
    rpc postGeneral (PostGeneralRequest) returns (PostGeneralResponse);
    rpc read (ReadRequest) returns (ReadResponse);
    rpc readGeneral (ReadGeneralRequest) returns (ReadGeneralResponse);
    rpc reset (ResetRequest) returns (ResetResponse);
    rpc broadcast (BroadcastRequest) returns (BroadcastResponse);
}
